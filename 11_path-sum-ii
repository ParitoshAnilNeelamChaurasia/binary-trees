// https://leetcode.com/problems/path-sum-ii/description/

class Solution {
public:
    vector<vector<int>> res ;

    void f(TreeNode* root , int sum , vector<int> &temp , int targetSum)
    {
        if(root== NULL)
        {
            return ;
        }

        sum += root->val ;
        temp.push_back(root->val) ;

        if(root->left == NULL && root->right == NULL)
        {
            if(sum == targetSum)
            {
                res.push_back(temp) ;
            }
        }
        else
        {
            f(root->left , sum , temp , targetSum) ;
            f(root->right , sum , temp , targetSum) ;
        }
        temp.pop_back() ;
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        int sum = 0 ;

        vector<int> temp ;

        f(root , sum , temp , targetSum) ;

        return res ;

    }
};
